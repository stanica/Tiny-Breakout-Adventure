<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxHealth = 30;
health = 30;
lives = 3;
damage = 10;
defense = 3;
toEnemy = 0;
toPlayer = 0;

//image_xscale = 0.0625;
//image_yscale = 0.0625;

var fixture = physics_fixture_create();
physics_fixture_set_circle_shape(fixture, sprite_width/2);
physics_fixture_set_density(fixture, 0.1);
physics_fixture_set_restitution(fixture, 1.01);
physics_fixture_set_linear_damping(fixture, 0);
physics_fixture_set_angular_damping(fixture, 0);
physics_fixture_set_friction(fixture, 0);
physics_fixture_bind(fixture, id);
physics_fixture_delete(fixture);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.state == "start"){
    phy_position_x = obj_paddle.phy_position_x;
    phy_position_y = obj_paddle.phy_position_y - 15;
}
if(phy_speed_x &gt; global.maxXSpeed){
  phy_speed_x = global.maxXSpeed;
}
if(phy_speed_y &gt; global.maxYSpeed){
  phy_speed_y = global.maxYSpeed;
}

if(phy_speed_y == 0 &amp;&amp; phy_position_y &lt; 100){
  phy_speed_y = 2;
}
else if(phy_speed_y == 0 &amp;&amp; phy_position_y &gt;= 100){
  phy_speed_y = -2;
}

//Fix movement that is too lateral or too vertical
if(phy_speed_y &gt;= -1 &amp;&amp; phy_speed_y &lt;= 1){
  phy_speed_y += sign(phy_speed_y) * 2;
}
if(phy_speed_x &gt;= -1 &amp;&amp; phy_speed_x &lt;=1){
  phy_speed_x += sign(phy_speed_x) * 2;
}

if(image_xscale != 1){
  image_xscale = lerp(image_xscale, 1, 0.6);
}
if(image_yscale != 0.1){
  image_yscale = lerp(image_yscale, 1, 0.6);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toEnemy = damage - other.defense;
if(other.defense != 9999 &amp;&amp; toEnemy &lt; 0){
  toEnemy = 1;
}
else if(other.defense == 9999){
  toEnemy = 0;
}

toPlayer = other.damage - defense;
if(toPlayer &lt; 0){
  toPlayer = 0;
}
other.hp -= toEnemy;
health -= toPlayer;

ds_list_add(obj_log.log, 'You hit ' + string(other.name) + ' for ' + string(toEnemy));
obj_log.index ++;
ds_list_add(obj_log.log, string(other.name) + ' hit you for ' + string(toPlayer));
obj_log.index ++;

i = instance_create(other.x-7, other.y-20, obj_damage);
i.type = 'enemy';
i.amount = toPlayer;

i = instance_create(other.x-7, other.y-20, obj_damage);
i.type = 'player';
i.amount = toEnemy;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.screenShake){
  global.shakeDuration = 2;
  instance_create(0,0,screenshake);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_paddle">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.image_yscale = 0.07;
other.image_xscale = 0.12;
image_xscale = 1.2;
image_yscale = 0.8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_healthbar(217, 12, 262, 19, health/maxHealth * 100, c_black, c_red, make_color_rgb(131,204,20), direction, false, false);
draw_healthbar(218, 16, 261, 18, health/maxHealth * 100, c_black, c_red, make_color_rgb(119,186,20), direction, false, false);
//show_debug_message(phy_speed_x);
//show_debug_message(phy_speed_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
